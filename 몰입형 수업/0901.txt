네트워크란 다른 장치로 데이터를 이동시킬 수 있는 컴퓨터들과 주변 장치들의 집합.
네트워크의 연결된 모든 장치들을 노드.
다른 노드에게 하나 이상의 서비스를 해주는 노드를 호스트.
osi 계층 모델은 모두 7계층
데이터 통신을 이해하는데 osi 계층 모델은 상당한 역할을 하지만, 인터넷 기반의 표준 모델로 사용하는 TCP/IP 계충 모델을 주로 사용하고 있다.
자바에서 이야기하는 네트워크 프로그래밍은 TCP/IP모델로 사용하고 있다. 

---------------------------------------------------------------------------------
인터넷 주소(IP 주소)

각 호스트는 도메인 이름을 컴퓨터가 사용하는 주소로 바꾸어 주어야함.
이렇게 ip주소를 도메인 이름으로 바꾸어 주는 시스템을 Domain Name System이라 함. 

도메인은 ip주소를 대신함. 

<포트와 프로토콜>
포트는 크게 두가지로 구분.
물리적인 포트 : 컴퓨터의 주변 장치를 접속하기 위함
논리적인 포트 : 프로그램에서 사용되는 접속 장소
예약된 포트들을 잘 알려진 포트들 이라고 부름.
80 HTTP
21 FTP
22 SSH
23 TELNET
0~1023까지는 시스템에 의해 예약된 포트번호이기 때문에 될 수 있는 한 사용하지 않는 것이 바람직함.


TCP와 UDP
TCP는 신뢰도가 높다.
UDP는 신뢰도가 낮다.  전송속도가 빠름. 대용량 보낼 때 

자바에서 
InetAddress 클래스는 IP주소를 표현한 클래스.
- 생성자는 하나만 존재하지만, 특이하게 기본 생성자의 접근제한자 디폴트라 뉴 연산자 객체를 생성 X
따라서 InetAddress 클래스는 객체를 생성해 줄 수 있는 5개의 static 메서드를 제공함.
싱글톤 패턴기법이라 static 메소드를 불러서 호출 함.

5개의 static 메서드는 모두 UnknownHostException 예외 발생 시켜서 반드시 예외 처리를 해야함. 


get방식과 post 방식

중요하지 않은 데이터를 보통 get 방식
중요한 데이터 넘길 때는 post 방식으로 생각하면 됨.

자바에서 url 담당하는 클래스가 따로 있음. 


URLConnection클래스
원격 자원에 접근하는데 필요한 정보를 가지고 있음.

php는 초창기 언어임
asp는 부모가 ms
jsp는 자바 기준 
백엔드가 사이트 만들 때 쓰는 언어 


URLConnection 클래스

원격 서버 자원의 결과만을 가져오지만, 원격 서버 자원의 결과와 원격 서버의 헤더 정보를 가져 올 수 있음.
openConnection()메서드를 이용해 불러옴 

-------------------------------------------------------------------------------------

소켓 !! 중요!!!
Exception 두개가 필요.
자바에서 소켓은 네트워크 부분의 끝 부분을 나타내며, 실제 데이터가 어떻게 전송되는지 상관하지 않고 읽기/쓰기 인터페이스 제공.
TCP/IP 계층의 TCP를 지원하기 위해서 Socket, ServerSocket 클래스를 제공하고 있다.
클라이언트는 Socket 객체를 생성하여 TCP서버와 연결을 시도함.

서버는 SocketServer 객체를 생성하여 TCP 연결을 청취하여 클라이언트와 서버가 연결됨.

세션은 서버가 가지고 있는 내 정보
쿠키 내 컴퓨터 사이트에 저장된 내 정보 

@@ 카톡 만들기..


소켓이 닫히더라도 getIntAddress(), getPort() 메서드는 사용할 수 있으나, getInputStream(),getOutputStream()메서드는 사용할 수 없다. 

< TCP Server Socket>

클라이언트 소켓이 서버내에 서버 소켓에 먼저 연결됨. 
ServerSocket 클래스가 TCP 서버 소켓을 의미.
...


유니캐스팅방식
서버와 클라이언트 1대1 방식
아무리 클라이언트가 여러개 일지라도 클라이언트가 서버에 각각접속한거지 클라이언트끼리는 통신하는 것이 아님 

멀티캐스팅 방식은
서버와 클라이언트 통신할 때 클라이언트와 클라이언트끼리도 통신이 가능한거 

멀티캐스팅 
유니 캐스트 모델은 실시간 프로그램에서 서버의 정보를 모든 클라이언트가 공유할 때 문제점이 있다.
이런문제를 해결할 수 있는 방법이 일대다 전송을 지원하는 멀티 캐스팅 방법이다.

한명의 클라이언트가 서버의 정보를 변경했을 경우 모든 클라이언트에게 전송함으로써




